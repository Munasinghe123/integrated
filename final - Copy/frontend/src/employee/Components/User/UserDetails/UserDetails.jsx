import React, { useEffect, useState, useRef } from "react";
import axios from "axios";
import { useReactToPrint } from "react-to-print";
import { Link } from "react-router-dom";
import './UserDetails.css';

const URL = "http://localhost:5000/users";

const fetchHandler = async () => {
  return await axios.get(URL).then((res) => res.data);
};

export default function UserDetails() {
  const [users, setUsers] = useState([]);
  const [filteredUsers, setFilteredUsers] = useState([]);
  const [searchQuery, setSearchQuery] = useState("");
  const [noResults, setNoResults] = useState(false);
  const componentsRef = useRef();

  useEffect(() => {
    fetchHandler().then((data) => {
      const usersList = data.users || data;
      setUsers(usersList);
      setFilteredUsers(usersList);
    });
  }, []);

  const deleteHandler = async (userId) => {
    try {
      await axios.delete(`http://localhost:5000/users/${userId}`);
      const updatedUsers = users.filter(user => user._id !== userId);
      setUsers(updatedUsers);
      setFilteredUsers(updatedUsers);
    } catch (error) {
      console.error("Error deleting user:", error);
    }
  };

  // Update the filtered users in search
  useEffect(() => {
    const filtered = users.filter((user) =>
      user.name.toLowerCase().includes(searchQuery.toLowerCase())
    ).filter((user) => user.role !== "admin");

    setFilteredUsers(filtered);
    setNoResults(filtered.length === 0);
  }, [searchQuery, users]);

  // Report generation
  const handlePrint = useReactToPrint({
    content: () => componentsRef.current,
    documentTitle: "Users Report",
  });

  return (
    <div className="user-details-container">
      <div className="search-container">
        {/* Search bar */}
        <input
          onChange={(e) => setSearchQuery(e.target.value)}
          type="text"
          name="search"
          placeholder="Search employees by name"
          value={searchQuery}
        />
      </div>

      {noResults ? (
        <div className="no-results">
          <p>No employees found</p>
        </div>
      ) : (
        <div className="user-list" ref={componentsRef}>
          <div className="print-header">
            <h1>Employee Report</h1>
            <p className="report-date">{new Date().toLocaleDateString()}</p>
          </div>
          <table>
            <thead>
              <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Username</th>
                <th>Email</th>
                <th>Contact Number</th>
                <th>Address</th>
                <th>Role</th>
                <th>Salary</th>
                <th>Total Salary with OT</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {filteredUsers.map((user) => (
                <tr key={user._id}>
                  <td>{user._id}</td>
                  <td>{user.name}</td>
                  <td>{user.userName}</td>
                  <td>{user.email}</td>
                  <td>{user.contactNumber}</td>
                  <td>{user.address}</td>
                  <td>{user.role}</td>
                  <td>${user.salary}</td>
                  <td>${user.total_salary_with_OT}</td>
                  <td>
                    <button className="action-button delete" onClick={() => deleteHandler(user._id)}>Delete</button>
                    <Link to={`/UpdateUser/${user._id}`}>
                      <button className="action-button update">Update</button>
                    </Link>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>

          <div className="print-footer">
            <p>Generated by Employee Management System</p>
            <p>For more details, contact JayagamaStores.com</p>
          </div>
        </div>
      )}

      <button className="download-button" onClick={handlePrint}>Download Report</button>
    </div>
  );
}
